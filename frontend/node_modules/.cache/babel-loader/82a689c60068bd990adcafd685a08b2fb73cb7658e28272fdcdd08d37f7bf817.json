{"ast":null,"code":"var _jsxFileName = \"C:\\\\codes\\\\hackathon\\\\newhack_2024\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport DataSidebar from './components/DataSidebar';\nimport MainContent from './components/MainContent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isDataSidebarOpen, setIsDataSidebarOpen] = useState(false);\n  const [deliveries, setDeliveries] = useState([]);\n  const toggleSidebar = () => {\n    if (isSidebarOpen || isDataSidebarOpen) {\n      setIsSidebarOpen(false);\n      setIsDataSidebarOpen(false);\n    } else {\n      setIsSidebarOpen(true);\n    }\n  };\n  const toggleDataSidebar = () => {\n    if (isDataSidebarOpen) {\n      setIsDataSidebarOpen(false);\n      setIsSidebarOpen(true);\n    } else if (isSidebarOpen) {\n      setIsSidebarOpen(false);\n      setIsDataSidebarOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `toggle-btn ${isSidebarOpen || isDataSidebarOpen ? 'open' : 'closed'}`,\n      onClick: toggleSidebar,\n      children: isSidebarOpen || isDataSidebarOpen ? '<<' : '>>'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(Sidebar, {\n      setDeliveries: setDeliveries,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-data-btn\",\n        onClick: toggleDataSidebar,\n        children: \"Show Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), isDataSidebarOpen && /*#__PURE__*/_jsxDEV(DataSidebar, {\n      deliveries: deliveries,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-data-btn\",\n        onClick: toggleDataSidebar,\n        children: \"Show Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      isSidebarOpen: isSidebarOpen || isDataSidebarOpen,\n      deliveries: deliveries,\n      setDeliveries: setDeliveries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ep7SBsoUVXtsht9Zi/gsUP3fsSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","DataSidebar","MainContent","jsxDEV","_jsxDEV","App","_s","isSidebarOpen","setIsSidebarOpen","isDataSidebarOpen","setIsDataSidebarOpen","deliveries","setDeliveries","toggleSidebar","toggleDataSidebar","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/codes/hackathon/newhack_2024/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport DataSidebar from './components/DataSidebar';\r\nimport MainContent from './components/MainContent';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isDataSidebarOpen, setIsDataSidebarOpen] = useState(false);\r\n  const [deliveries, setDeliveries] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    if (isSidebarOpen || isDataSidebarOpen) {\r\n      setIsSidebarOpen(false);\r\n      setIsDataSidebarOpen(false);\r\n    } else {\r\n      setIsSidebarOpen(true);\r\n    }\r\n  };\r\n\r\n  const toggleDataSidebar = () => {\r\n    if (isDataSidebarOpen) {\r\n      setIsDataSidebarOpen(false);\r\n      setIsSidebarOpen(true);\r\n    } else if (isSidebarOpen) {\r\n      setIsSidebarOpen(false);\r\n      setIsDataSidebarOpen(true);\r\n    } \r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button \r\n        className={`toggle-btn ${isSidebarOpen || isDataSidebarOpen ? 'open' : 'closed'}`} \r\n        onClick={toggleSidebar}\r\n      >\r\n        {isSidebarOpen || isDataSidebarOpen ? '<<' : '>>'}\r\n      </button>\r\n      \r\n      {isSidebarOpen && (\r\n        <Sidebar setDeliveries={setDeliveries}>\r\n          <button \r\n            className=\"toggle-data-btn\"\r\n            onClick={toggleDataSidebar}\r\n          >\r\n            Show Data\r\n          </button>\r\n        </Sidebar>\r\n      )}\r\n      \r\n      {isDataSidebarOpen && (\r\n        <DataSidebar deliveries={deliveries}>\r\n          <button \r\n            className=\"toggle-data-btn\"\r\n            onClick={toggleDataSidebar}\r\n          >\r\n            Show Input\r\n          </button>\r\n        </DataSidebar>\r\n      )}\r\n\r\n      <MainContent \r\n        isSidebarOpen={isSidebarOpen || isDataSidebarOpen}\r\n        deliveries={deliveries} \r\n        setDeliveries={setDeliveries} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,aAAa,IAAIE,iBAAiB,EAAE;MACtCD,gBAAgB,CAAC,KAAK,CAAC;MACvBE,oBAAoB,CAAC,KAAK,CAAC;IAC7B,CAAC,MAAM;MACLF,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIL,iBAAiB,EAAE;MACrBC,oBAAoB,CAAC,KAAK,CAAC;MAC3BF,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM,IAAID,aAAa,EAAE;MACxBC,gBAAgB,CAAC,KAAK,CAAC;MACvBE,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MACEW,SAAS,EAAE,cAAcR,aAAa,IAAIE,iBAAiB,GAAG,MAAM,GAAG,QAAQ,EAAG;MAClFQ,OAAO,EAAEJ,aAAc;MAAAG,QAAA,EAEtBT,aAAa,IAAIE,iBAAiB,GAAG,IAAI,GAAG;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAERd,aAAa,iBACZH,OAAA,CAACJ,OAAO;MAACY,aAAa,EAAEA,aAAc;MAAAI,QAAA,eACpCZ,OAAA;QACEW,SAAS,EAAC,iBAAiB;QAC3BE,OAAO,EAAEH,iBAAkB;QAAAE,QAAA,EAC5B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACV,EAEAZ,iBAAiB,iBAChBL,OAAA,CAACH,WAAW;MAACU,UAAU,EAAEA,UAAW;MAAAK,QAAA,eAClCZ,OAAA;QACEW,SAAS,EAAC,iBAAiB;QAC3BE,OAAO,EAAEH,iBAAkB;QAAAE,QAAA,EAC5B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACd,eAEDjB,OAAA,CAACF,WAAW;MACVK,aAAa,EAAEA,aAAa,IAAIE,iBAAkB;MAClDE,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA9DID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAgET,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}