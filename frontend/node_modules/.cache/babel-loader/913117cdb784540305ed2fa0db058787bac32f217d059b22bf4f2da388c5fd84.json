{"ast":null,"code":"var _jsxFileName = \"C:\\\\codes\\\\hackathon\\\\newhack_2024\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [deliveries, setDeliveries] = useState([]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `toggle-btn ${isSidebarOpen ? 'open' : 'closed'}`,\n      onClick: toggleSidebar,\n      children: isSidebarOpen ? '<<' : '>>'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(Sidebar, {\n      setDeliveries: setDeliveries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      isSidebarOpen: isSidebarOpen,\n      deliveries: deliveries,\n      setDeliveries: setDeliveries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zGevQjKAeKuE2Oo33lDx4iC8zPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","MainContent","jsxDEV","_jsxDEV","App","_s","isSidebarOpen","setIsSidebarOpen","deliveries","setDeliveries","toggleSidebar","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/codes/hackathon/newhack_2024/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport MainContent from './components/MainContent';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [deliveries, setDeliveries] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button \r\n        className={`toggle-btn ${isSidebarOpen ? 'open' : 'closed'}`} \r\n        onClick={toggleSidebar}\r\n      >\r\n        {isSidebarOpen ? '<<' : '>>'}\r\n      </button>\r\n      \r\n      {isSidebarOpen && <Sidebar setDeliveries={setDeliveries} />}\r\n\r\n      <MainContent \r\n        isSidebarOpen={isSidebarOpen} \r\n        deliveries={deliveries} \r\n        setDeliveries={setDeliveries} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BH,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACEH,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MACEQ,SAAS,EAAE,cAAcL,aAAa,GAAG,MAAM,GAAG,QAAQ,EAAG;MAC7DO,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAEtBN,aAAa,GAAG,IAAI,GAAG;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EAERX,aAAa,iBAAIH,OAAA,CAACH,OAAO;MAACS,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3Dd,OAAA,CAACF,WAAW;MACVK,aAAa,EAAEA,aAAc;MAC7BE,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CA1BID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}